{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","Mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","AboutTest","onClick","togglemode","role","Alert","alert","msg","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","replace","element","document","file","Blob","URL","createObjectURL","download","click","wc","split","length","forEach","word","countWords","defaultProps","aboutTest","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAGe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,8BAAAC,OAAgCL,EAAMM,KAAI,YAAAD,OAAWL,EAAMM,OACzEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAKP,EAAMQ,OAC5CP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBK,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1Lb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAI,SAE9DN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWG,KAAK,KAAKP,EAAMiB,aAO5ChB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbL,EAAMM,KAAe,OAAO,UACjFL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBK,KAAK,WAAWS,QAASlB,EAAMmB,WAAYC,KAAK,SAASL,GAAG,2BAChGd,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBAAqB,wBCxBzB,SAASiB,EAAMrB,GAM5B,OACEA,EAAMsB,OAASrB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAMsB,MAAMb,KAAI,gCAAgCW,KAAK,SACpGnB,EAAAC,EAAAC,cAAA,cAASH,EAAMsB,MAAMb,KAAK,KAAU,MAAIT,EAAMsB,MAAMC,KCRxC,SAASC,EAASxB,GAuC9B,IAAAyB,EAEqBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA1BK,EAAIH,EAAA,GAACI,EAAOJ,EAAA,GAEpB,OACF1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO6B,MAAO,CAACC,MAAmB,SAAblC,EAAMM,KAAc,QAAQ,UAC9DL,EAAAC,EAAAC,cAAA,UAAKH,EAAMmC,SACXlC,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAeW,GAAG,qBAAqBqB,MAAON,EAAMG,MAAO,CAACI,gBAA6B,SAAbrC,EAAMM,KAAc,OAAO,QAAQ4B,MAAmB,SAAblC,EAAMM,KAAc,QAAQ,SAAUgC,SAvC1J,SAACC,GAClBC,QAAQC,IAAI,aACZV,EAAQQ,EAAMG,OAAON,QAqCgLO,KAAK,OAGhN1C,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,uBAAuBc,QAlDrC,WACjBsB,QAAQC,IAAI,yBACZ,IAAIG,EAAQd,EAAKe,cACjBd,EAAQa,GACR5C,EAAM8C,UAAU,yBAAyB,aA8CqC,wBAC/E7C,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,uBAAuBc,QAxCrC,WACjB,IAAI0B,EAAQd,EAAKiB,cACjBhB,EAAQa,KAsCuE,uBAChF3C,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,sBAAsBc,QArCrC,WAChB,IAAI0B,EAAQd,EAAKkB,QAAQ,IAAI,MAC7BjB,EAAQa,KAmCqE,WAC9E3C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBc,QAjCtB,WACpB,IAAM+B,EAAUC,SAAS/C,cAAc,KACjCgD,EAAO,IAAIC,KAAK,CAACtB,GAAO,CAC5BrB,KAAM,eAERwC,EAAQ1C,KAAO8C,IAAIC,gBAAgBH,GACnCF,EAAQM,SAAW,aACnBN,EAAQO,UA0B4D,kBAExEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB6B,MAAO,CAACC,MAAmB,SAAblC,EAAMM,KAAc,QAAQ,UACtEL,EAAAC,EAAAC,cAAA,UAAI,qBACJF,EAAAC,EAAAC,cAAA,SA5BJ,SAAoB2B,GAClB,IAAI2B,EAAK3B,EAAK4B,MAAM,KAAKC,OAOzB,OANA7B,EAAK4B,MAAM,KAAKE,QAAQ,SAACC,GACjBA,EAAKF,SACLF,GAAM,KAIPA,EAoBDK,CAAWhC,GAAM,cAAYA,EAAK6B,OAAO,eAC7C1D,EAAAC,EAAAC,cAAA,SAAI,KAAQ2B,EAAK4B,MAAM,KAAKC,OAAO,qBACnC1D,EAAAC,EAAAC,cAAA,UAAI,WAGJF,EAAAC,EAAAC,cAAA,SAAI2B,EAAK6B,OAAO,EAAE7B,EAAK,yDF5B/B/B,EAAOgE,aAAa,CAChBvD,MAAM,kBACNwD,UAAU,gBGwCCC,MA5Df,WAAe,IAAAxC,EACOC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA/BnB,EAAIqB,EAAA,GAACuC,EAAOvC,EAAA,GAAAwC,EACIzC,mBAAS,MAAK0C,EAAAxC,OAAAC,EAAA,EAAAD,CAAAuC,EAAA,GAA9B7C,EAAK8C,EAAA,GAACC,EAAQD,EAAA,GAEdtB,EAAU,SAACwB,EAAQ7D,GACvB4D,EAAS,CACP9C,IAAI+C,EACJ7D,KAAKA,IAEP8D,WAAW,WACTF,EAAS,OACR,OAoBL,OACEpE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KAEE/B,EAAAC,EAAAC,cAACJ,EAAM,CAACS,MAAM,YAAYF,KAAMA,EAAMa,WAlBzB,WACL,UAAPb,GAED4D,EAAQ,QACRhB,SAASsB,KAAKvC,MAAMI,gBAAgB,OACpCS,EAAU,oBAAoB,WAC9BI,SAAS1C,MAAM,uBAGf0D,EAAQ,SACRhB,SAASsB,KAAKvC,MAAMI,gBAAgB,QACpCS,EAAU,qBAAqB,WAC/BI,SAAS1C,MAAM,0BAQfP,EAAAC,EAAAC,cAACkB,EAAK,CAACC,MAAOA,IACdrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAKXH,EAAAC,EAAAC,cAACqB,EAAQ,CAACW,QAAQ,wBAAyB7B,KAAMA,EAAMwC,UAAWA,OCjD7D2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWrC,SAASsC,eAAe,SACpDC,OACHxF,EAAAC,EAAAC,cAACF,EAAAC,EAAMwF,WAAU,KACfzF,EAAAC,EAAAC,cAACwF,EAAG,QAORlB","file":"static/js/main.50875407.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.Mode} navbar-${props.Mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">{props.AboutTest}</a>\r\n          </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.Mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label \" >Enable Dark mode</label>\r\n         </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    aboutTest:PropTypes.string.isRequired \r\n}\r\nNavbar.defaultProps={\r\n    title:\"Set tiltle here\",\r\n    aboutTest:\"SetTitleHere\"\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n  const capitalize=(word)=>{\r\n    const lower=word.toLowercase();\r\n    return lower.charAt(0).toUppercase()+lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n   <strong>{props.alert.type} </strong> : {props.alert.msg}\r\n    \r\n  </div>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n     const handleUpClick=()=>{\r\n        console.log(\"uppercase was clicked\");\r\n        let newText=text.toUpperCase()\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\")\r\n\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleLowClick=()=>{\r\n        let newText=text.toLowerCase()\r\n        setText(newText);\r\n    }\r\n    const handleReverse=()=>{\r\n        let newText=text.replace(\"I\",\"We\")\r\n        setText(newText);\r\n\r\n    }\r\n    const downloadTxtFile = () => {\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([text], {\r\n          type: \"text/plain\"\r\n        });\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"myFile.txt\";\r\n        element.click();\r\n    }\r\n    function countWords(text){\r\n      let wc = text.split(\" \").length;\r\n      text.split(\" \").forEach((word) => {\r\n          if(!word.length){\r\n              wc -= 1;  \r\n          }\r\n      });\r\n\r\n      return wc;\r\n  }\r\n\r\n    const[text,setText]=useState('');\r\n    //setText(\"newText\");\r\n  return (\r\n<>\r\n  <div className=\"mb-3\" style={{color:props.Mode==='dark'?'white':'black'}}>\r\n    <h3>{props.heading}</h3>\r\n    <textarea className=\"form-control\" id=\"exampleInputEmail1\" value={text} style={{backgroundColor:props.Mode==='dark'?'grey':'white',color:props.Mode==='dark'?'white':'black'}} onChange={handleOnChange} rows=\"8\"/>\r\n     {/* <textarea value={text}></textarea>  */}  \r\n  </div>\r\n  <div>\r\n       <button type=\"submit\" className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n       <button type=\"submit\" className=\"btn btn-success mx-2\" onClick={handleLowClick}>Convert to Lowecase</button>\r\n       <button type=\"submit\" className=\"btn btn-danger mx-2\" onClick={handleReverse}>I to we</button>\r\n       <button className='btn btn-secondary mx-2' onClick={downloadTxtFile}>Download Text</button>\r\n  </div>\r\n    <div className='container my-2' style={{color:props.Mode==='dark'?'white':'black'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{countWords(text)} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} seconds required</p>\r\n        <h2>\r\n            Preview\r\n        </h2>\r\n        <p>{text.length>0?text:\"Enter something in the above box to preview it here\"}</p>\r\n\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","\n// import { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react'\n\n// import { createRoot } from \"react-dom/client\";\n//import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import{ BrowserRouter,\n//   Routes,\n//   Route,\n//   Link }\n//   from \"react-router-dom\";\n\n\n\nfunction App() {\n  const[Mode,setMode]=useState('light');\n  const[alert,setAlert]=useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n    \n  }\n\n  const togglemode=()=>{\n    if(Mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='grey'\n      showAlert(\"Dark mode enabled\",\"success\");\n      document.title='TextUtils-DarkMode'\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light mode enabled\",\"success\");\n      document.title='TextUtils-LightMode'\n    }\n  }\n  return (\n    < >\n    {/* <BrowserRouter> */}\n      <Navbar title='TextUtils' Mode={Mode} togglemode={togglemode}/>\n      {/* <About/> */}\n      <Alert alert={alert}/>\n      <div className=\"container\">\n          {/* <Routes>\n            <Route path=\"/\" element={<TextForm heading=\"Enter text to analyze\"  Mode={Mode} showAlert={showAlert} />}/>\n            <Route path=\"/about\" element={<About />}/>\n          </Routes> */}\n          <TextForm heading=\"Enter text to analyze\"  Mode={Mode} showAlert={showAlert} />\n        </div>\n      {/* </BrowserRouter> */}\n    </>\n \n\n\n\n    \n    \n    \n\n    \n    \n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}